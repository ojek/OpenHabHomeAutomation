import org.openhab.model.script.actions.Timer
var Timer motionTimer = null
var Timer buttonTimer = null
val int motionTimeout = 5
val int buttonTimeout = 30

rule "CeilingLight_Motion"
when
    Item MotionSensor_Bedroom_Main received update or
    Item MotionSensor_LivingRoom_Main received update
then
    if (buttonTimer === null && (MotionSensor_Bedroom_Main.state == 1 || MotionSensor_LivingRoom_Main.state == 1))
    {
        if (motionTimer !== null)
        {
            motionTimer.reschedule(now.plusSeconds(motionTimeout))
        }
        else 
        {
            motionTimer = createTimer(now.plusSeconds(motionTimeout)) [|
                motionTimer.cancel
                motionTimer = null
                Yeelight1_switch.sendCommand("OFF")
            ]
        }

        if (Yeelight1_switch.state == OFF)
        {
            Yeelight1_switch.sendCommand("ON")
        }
    }
end

rule "CeilingLight_WallSwitch"
when
    Item Sonoff_T1_LivingRoom_Main_SW1 received update
then
    if (motionTimer !== null)
    {
        motionTimer.cancel
        motionTimer = null
    }

    if (buttonTimer !== null)
    {
        buttonTimer.reschedule(now.plusSeconds(buttonTimeout))
    }
    else
    {    
        if (Sonoff_T1_LivingRoom_Main_SW1.state == ON)
        {
            buttonTimer = createTimer(now.plusSeconds(buttonTimeout)) [|
                buttonTimer.cancel
                buttonTimer = null
                Yeelight1_switch.sendCommand("OFF")
                Sonoff_T1_LivingRoom_Main_SW1.sendCommand("OFF")
            ]
        }
        else
        {
            buttonTimer.cancel
            buttonTimer = null
        }
    }

    if (Sonoff_T1_LivingRoom_Main_SW1.state == ON)
    {
        Yeelight1_switch.sendCommand("ON")
    }
    else
    {
        Yeelight1_switch.sendCommand("OFF")
    }
end